[global]
; Log to stderr
error_log = /dev/stderr

[www]
user = caddy
group = caddy
listen = 127.0.0.1:9000
pm = ondemand

; Total RAM dedicated to the web server / Max child process size
pm.max_children = 100

pm.process_idle_timeout = 10s
pm.max_requests = 1000
chdir = /var/www
php_flag[display_errors] = on
php_admin_value[memory_limit] = 256M
php_admin_value[upload_max_filesize] = 1024M
php_admin_value[post_max_size] = 1024M
php_admin_value[output_buffering] = 0
php_admin_value[openssl.cafile] = /etc/ssl/certs/ca-certificates.crt
php_admin_value[openssl.capath] = /etc/ssl/certs
php_admin_value[max_input_nesting_level] = 256
php_admin_value[max_input_vars] = 10000

; Redirect worker stdout and stderr into main error log. If not set, stdout and
; stderr will be redirected to /dev/null according to FastCGI specs.
; Default Value: no
catch_workers_output = yes

; Database variables passed via -e argument on Docker
env["DB_HOST"] = "$DB_HOST"
env["DB_USER"] = "$DB_USER"
env["DB_PASSWORD"] = "$DB_PASSWORD"
env["DB_NAME"] = "$DB_NAME"
env["FS_METHOD"] = "$FS_METHOD"

# -----------
# [global]
# ; Log to stderr
# error_log = /dev/stderr

# [www]
# ; Enable status page
# pm.status_path = /fpm-status

# ; Ondemand process manager
# pm = ondemand

# ; The number of child processes to be created when pm is set to 'static' and the
# ; maximum number of child processes when pm is set to 'dynamic' or 'ondemand'.
# ; This value sets the limit on the number of simultaneous requests that will be
# ; served. Equivalent to the ApacheMaxClients directive with mpm_prefork.
# ; Equivalent to the PHP_FCGI_CHILDREN environment variable in the original PHP
# ; CGI. The below defaults are based on a server without much resources. Don't
# ; forget to tweak pm.* to fit your needs.
# ; Note: Used when pm is set to 'static', 'dynamic' or 'ondemand'
# ; Note: This value is mandatory.
# pm.max_children = 100

# ; The number of seconds after which an idle process will be killed.
# ; Note: Used only when pm is set to 'ondemand'
# ; Default Value: 10s
# pm.process_idle_timeout = 10s;

# ; The number of requests each child process should execute before respawning.
# ; This can be useful to work around memory leaks in 3rd party libraries. For
# ; endless request processing specify '0'. Equivalent to PHP_FCGI_MAX_REQUESTS.
# ; Default Value: 0
# pm.max_requests = 1000

# ; Make sure the FPM workers can reach the environment variables for configuration
# clear_env = no

# ; Catch output from PHP
# catch_workers_output = yes

# ; Wordpress DIR
# chdir = /var/www