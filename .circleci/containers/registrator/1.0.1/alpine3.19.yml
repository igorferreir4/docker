version: 2.1

orbs:
  docker: circleci/docker@2.5.0

executors:
  orb-machine:
    machine:
      image: ubuntu-2204:current
    resource_class: large

parameters:
  build-and-push:
    type: boolean
    default: false
  run-all:
    type: boolean
    default: false

commands:
  setup-qemu-amd64:
    steps:
      - run:
          name: Setup Qemu
          command: |
            docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - run:
          name: Create builder
          command: |
            export DOCKER_CLI_EXPERIMENTAL=enabled
            docker context create multi-arch-build
            docker buildx create --use multi-arch-build
      - run:
          name: Login to Docker Hub
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login --username $DOCKERHUB_USERNAME --password-stdin

  setup-qemu-arm64:
    steps:
      - run:
          name: Setup Qemu
          command: |
            docker run --rm --privileged hectorm/qemu-user-static --reset -p yes
      - run:
          name: Create builder
          command: |
            export DOCKER_CLI_EXPERIMENTAL=enabled
            docker context create multi-arch-build
            docker buildx create --use multi-arch-build
      - run:
          name: Login to Docker Hub
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login --username $DOCKERHUB_USERNAME --password-stdin

jobs:
  build-amd64:
    environment:
      IMAGE_REPO: igorferreir4/registrator
      IMAGE_TAGS: teste1,123,teste123
    executor: docker/machine
    resource_class: large
    steps:
      - checkout
      - setup-qemu-amd64
      - docker/check:
          docker-username: DOCKERHUB_USERNAME
          docker-password: DOCKERHUB_PASSWORD
      - docker/build:
          step-name: Build amd64
          image: $IMAGE_REPO
          cache_from: $IMAGE_REPO:teste1
          path: ./containers/registrator/1.0.1/alpine3.19
          docker-context: ./containers/registrator/1.0.1/alpine3.19
          use-buildkit: true
          extra_build_args: --platform linux/amd64,linux/arm64/v8
      - run:
          name: Teste SSH depois da Build
          command: |
            ssh-keyscan $SSH_HOST_IGOR_ARM >> ~/.ssh/known_hosts
            ssh $SSH_USER@$SSH_HOST_IGOR_ARM "echo Executado em "$(date +"%d/%m/%G - %Hh:%Mm:%Ss") - amd64" >> circleci.txt" >> ~/circleci.txt

  build-arm64:
    environment:
      IMAGE_REPO: igorferreir4/registrator
      IMAGE_TAGS: teste4,456,teste456
    executor: docker/machine
    resource_class: arm.large
    steps:
      - checkout
      - setup-qemu-arm64
      - docker/check:
          docker-username: DOCKERHUB_USERNAME
          docker-password: DOCKERHUB_PASSWORD
      - docker/build:
          step-name: Build arm64
          image: $IMAGE_REPO
          cache_from: $IMAGE_REPO:teste4
          path: ./containers/registrator/1.0.1/alpine3.19
          docker-context: ./containers/registrator/1.0.1/alpine3.19
          use-buildkit: true
          extra_build_args: --platform linux/amd64,linux/arm64/v8
      - run:
          name: Teste SSH depois da Build
          command: |
            ssh-keyscan $SSH_HOST_IGOR_ARM >> ~/.ssh/known_hosts
            ssh $SSH_USER@$SSH_HOST_IGOR_ARM "echo Executado em "$(date +"%d/%m/%G - %Hh:%Mm:%Ss") - arm64" >> circleci.txt" >> ~/circleci.txt

workflows:
  registrator-v1.0.1-alpine3.19:
    jobs:
      - build-amd64
      - build-arm64




# workflows:
#   build-amd64:
#     environment:
#       IMAGE_REPO: igorferreir4/registrator
#       IMAGE_TAGS: teste1,123,teste123
#     jobs:
#       - docker/check:
#           docker-username: $DOCKERHUB_USERNAME
#           docker-password: $DOCKERHUB_PASSWORD
#       - docker/publish:
#           executor:
#             image: ubuntu-2204:current
#             name: docker/machine
#             resource-class: large
#           # deploy: false
#           image: $IMAGE_REPO
#           tag: $IMAGE_TAGS
#           cache_from: $IMAGE_REPO:IMAGE_TAGS
#           update-description: false
#           use-buildkit: true 

#   build-arm64:
#     environment:
#       IMAGE_REPO: igorferreir4/registrator
#       IMAGE_TAGS: teste4,456,teste456
#     jobs:
#       - docker/check:
#           docker-username: $DOCKERHUB_USERNAME
#           docker-password: $DOCKERHUB_PASSWORD
#       - docker/publish:
#           executor:
#             image: ubuntu-2204:current
#             name: docker/machine
#             resource-class: arm.large
#           # deploy: false
#           image: $IMAGE_REPO
#           tag: $IMAGE_TAGS
#           cache_from: $IMAGE_REPO:IMAGE_TAGS
#           update-description: false
#           use-buildkit: true 


  #  deploy:
  #   executor: docker-docker
  #   steps:
  #     - add_ssh_keys:
  #         fingerprints:
  #           - "SHA256:hLlCCj1OZj3pbBbgrGvfHjdTf20F4IYKyKvyJTMXC/A"
  #     - run:
  #         name: Teste SSH depois da Build
  #         command: |
  #           ssh-keyscan $SSH_HOST_IGOR_ARM >> ~/.ssh/known_hosts
  #           ssh $SSH_USER@$SSH_HOST_IGOR_ARM "echo Executado em "$(date +"%d/%m/%G - %Hh:%Mm:%Ss")" >> circleci.txt" >> ~/circleci.txt"
  #     # - run:
  #     #     name: Teste SSH depois da Build
  #     #     command: |
  #     #       ssh $SSH_USER@$SSH_HOST_IGOR_ARM "~/50GB/docker/executar-docker-compose-up-d.sh >> ~/circleci.txt 2>&1"