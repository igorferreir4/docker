version: 2.1

executors:
  docker-executor:
    machine:
      image: ubuntu-2204:2024.01.1
    resource_class: large

parameters:
  build-and-push:
    type: boolean
    default: false
  run-all:
    type: boolean
    default: false

commands:
  setup:
    steps:
      - run:
          name: Setup Qemu
          command: |
            docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - run:
          name: Create builder
          command: |
            export DOCKER_CLI_EXPERIMENTAL=enabled
            docker context create multi-arch-build
            docker buildx create --use multi-arch-build
      - run:
          name: Login to Docker Hub
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login --username $DOCKERHUB_USERNAME --password-stdin

jobs:
   build-registrator-1-0-1-alpine3-19:
    executor: docker-executor
    environment:
      IMAGE_REPO: igorferreir4/registrator
      IMAGE_TAGS: 1.0.1-alpine3.19
      IMAGE_ARCHS: linux/amd64,linux/arm64/v8 #,linux/arm/v6,linux/arm/v7
      CACHE_REPO: igorferreir4/buildcaches
      CACHE_NAME: registrator-1.0.1-alpine3.19
    working_directory: ~/project/containers/registrator/1.0.1/alpine3.19
    steps:
      - checkout:
          path: ~/project
      - setup
      - run:
          name: Build multiarch docker image and push
          command: |
            DOCKER_CLI_EXPERIMENTAL=enabled
            BUILDX_ARGS=""
            for tag in $(echo $IMAGE_TAGS | tr "," " "); do
              BUILDX_ARGS="$BUILDX_ARGS -t $IMAGE_REPO:$tag"
            done
            docker buildx build \
            --cache-from=type=registry,ref=$CACHE_REPO:$CACHE_NAME \
            --cache-to=type=registry,ref=$CACHE_REPO:$CACHE_NAME,mode=max \
            --push --platform $IMAGE_ARCHS $BUILDX_ARGS .

workflows:
   registrator-1-0-1-alpine3-19:
    when: 
      or: 
        - << pipeline.parameters.build-and-push >>
        - << pipeline.parameters.run-all >>
    jobs:
      -  build-registrator-1-0-1-alpine3-19