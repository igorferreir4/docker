version: 2.1

orbs:
  github-cli: circleci/github-cli@2.3.0

executors:
  go-executor:
    docker:
      - image: cimg/go:1.22.0
    resource_class: large

  docker-executor:
    machine:
      image: ubuntu-2204:current
    resource_class: large

parameters:
  build-and-push:
    type: boolean
    default: false
  run-all:
    type: boolean
    default: false

commands:
  setup:
    steps:
      - run:
          name: Setup Qemu
          command: |
            docker run --privileged --rm tonistiigi/binfmt --install all
      - run:
          name: Create builder
          command: |
            docker buildx create --name multi-arch-build --bootstrap --use
      - run:
          name: Login to Docker Hub
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login --username $DOCKERHUB_USERNAME --password-stdin

jobs:
  build-caddy-binary:
    executor: go-executor
    working_directory: ~/project/containers/caddy/executavel
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Get XCADDY
          command: |
            go version
            go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest
      - run:
          name: Build Binaries
          command: |
            sh ./scripts/build-all.sh
            chmod +x caddy-linux-amd64
            ./caddy-linux-amd64 version
            mkdir artifacts
            mv caddy-linux-amd64 caddy-linux-arm64 caddy-windows-amd64.exe caddy-windows-arm64.exe ./artifacts
      - run:
          name: Get Binary Version
          command: |
            ls ./artifacts
            ./artifacts/caddy-linux-amd64 version
            CADDY=$(./artifacts/caddy-linux-amd64 version)
            echo "version=$( echo $CADDY | head -n1 | cut -d " " -f1 )" >> $BASH_ENV
            mkdir gitclone
      - github-cli/setup
      - github-cli/clone:
          repo: caddy
          dir: ./gitclone
      - run:
          name: Create Release
          command: |
            cd ./gitclone
            if gh release view $version >/dev/null 2>&1; then
                gh release delete $version --cleanup-tag --yes
            fi
            cd ../
            gh release create $version --title "Binary Update - Caddy "$version"" --notes "Automated release from CircleCI" --repo igorferreir4/caddy ./artifacts/*

  build-caddy-2_7_6:
    executor: docker-executor
    environment:
      IMAGE_REPO: igorferreir4/caddy
      IMAGE_TAGS: 2.7.6
      IMAGE_ARCHS: linux/amd64,linux/arm64/v8
      CACHE_REPO: igorferreir4/buildcaches
      CACHE_NAME: caddy-2.7.6
    working_directory: ~/project/containers/caddy/2.7.6
    steps:
      - checkout:
          path: ~/project
      - setup
      - run:
          name: Build multiarch docker image and push
          command: |
            BUILDX_ARGS=""
            for tag in $(echo $IMAGE_TAGS | tr "," " "); do
              BUILDX_ARGS="$BUILDX_ARGS -t $IMAGE_REPO:$tag"
            done
            docker buildx build \
            --cache-from=type=registry,ref=$CACHE_REPO:$CACHE_NAME \
            --cache-to=type=registry,ref=$CACHE_REPO:$CACHE_NAME,mode=max \
            --push --platform $IMAGE_ARCHS $BUILDX_ARGS .

workflows:
  caddy-2.7.6:
    when: 
      or: 
        - << pipeline.parameters.build-and-push >>
        - << pipeline.parameters.run-all >>
    jobs:
      - build-caddy-binary
      - build-caddy-2_7_6:
          requires:
            - build-caddy-binary