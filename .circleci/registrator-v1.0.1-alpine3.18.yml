version: 2.1

executors:
  docker-executor:
    docker:
      - image: cimg/base:2023.12
    resource_class: large

parameters:
  build:
    type: boolean
    default: false

commands:
  setup:
    steps:
      - setup_remote_docker:
          version: docker24
          docker_layer_caching: false
      - run:
          name: Setup Qemu
          command: |
            docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      # - run:
      #     name: Install qemu-user-static
      #     command: sudo apt-get update && sudo apt-get install -y qemu-user-static
      # - run:
      #     name: Verify qemu-user-static installation
      #     command: qemu-x86_64-static --version
      - run:
          name: Create builder
          command: |
            export DOCKER_CLI_EXPERIMENTAL=enabled
            docker context create multi-arch-build
            docker buildx create --use multi-arch-build
      - run:
          name: Login to Docker Hub
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login --username $DOCKERHUB_USERNAME --password-stdin

jobs:
  teste18:
    executor: docker-executor
    environment:
      IMAGE_REPO: igorferreir4/registrator
      IMAGE_TAGS: teste18
      IMAGE_ARCHS: linux/amd64,linux/arm64/v8,linux/arm/v6,linux/arm/v7
      CACHE_REPO: igorferreir4/buildcaches
      CACHE_NAME: registrator-v1.0.1-alpine3.18
    working_directory: ~/project/imagens/registrator/v1.0.1-alpine3.18
    steps:
      - checkout:
          path: ~/project
      - setup
      - run:
          name: Build multiarch docker image and push
          command: |
            DOCKER_CLI_EXPERIMENTAL=enabled
            BUILDX_ARGS=""
            for tag in $(echo $IMAGE_TAGS | tr "," " "); do
              BUILDX_ARGS="$BUILDX_ARGS -t $IMAGE_REPO:$tag"
            done
            docker buildx build \
            --cache-from=type=registry,ref=$CACHE_REPO:$CACHE_NAME-tudo \
            --cache-to=type=registry,ref=$CACHE_REPO:$CACHE_NAME-tudo,mode=max \
            --push --platform $IMAGE_ARCHS $BUILDX_ARGS .
      # - run:
      #     name: Build cache for amd64 image and push
      #     command: |
      #       docker buildx build --cache-from=type=registry,ref=$CACHE_REPO:$CACHE_NAME-amd64 --cache-to=type=registry,ref=$CACHE_REPO:$CACHE_NAME-amd64 --platform linux/amd64 .
      # - run:
      #     name: Build cache for arm64 image and push
      #     command: |
      #       docker buildx build --cache-from=type=registry,ref=$CACHE_REPO:$CACHE_NAME-arm64 --cache-to=type=registry,ref=$CACHE_REPO:$CACHE_NAME-arm64 --platform linux/arm64 .
      # - run:
      #     name: Build cache for armv6 image and push
      #     command: |
      #       docker buildx build --cache-from=type=registry,ref=$CACHE_REPO:$CACHE_NAME-armv6 --cache-to=type=registry,ref=$CACHE_REPO:$CACHE_NAME-armv6 --platform linux/arm/v6 .
      # - run:
      #     name: Build cache for armv7 image and push
      #     command: |
      #       docker buildx build --cache-from=type=registry,ref=$CACHE_REPO:$CACHE_NAME-armv7 --cache-to=type=registry,ref=$CACHE_REPO:$CACHE_NAME-armv7 --platform linux/arm/v7 .


workflows:
  buildteste18:
    when: 
      or: 
        - << pipeline.parameters.build >>
    jobs:
      - teste18